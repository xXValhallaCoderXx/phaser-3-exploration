{"ast":null,"code":"import Phaser from \"phaser\";\nimport button1 from \"shared/images/ui/blue_button01.png\";\nimport button2 from \"shared/images/ui/blue_button02.png\";\nimport background from \"shared/level/background-extruded.png\";\nimport goalSound from \"shared/audio/Pickup.wav\";\nimport enemyDeath from \"shared/audio/EnemyDeath.wav\";\nimport playerAttack from \"shared/audio/PlayerAttack.wav\";\nimport playerDamage from \"shared/audio/PlayerDamage.wav\";\nimport playerDeath from \"shared/audio/PlayerDeath.wav\";\nimport itemSpriteSheet from \"shared/images/items.png\";\nimport charSpriteSheet from \"shared/images/characters.png\";\nimport monsterSpriteSheet from \"shared/images/monsters.png\";\nimport tileMap from \"shared/level/large_level.json\";\n\nclass BootScene extends Phaser.Scene {\n  constructor() {\n    super(\"Boot\");\n  }\n\n  preload() {\n    this.loadImages();\n    this.loadAudio();\n    this.loadSpriteSheets();\n    this.loadTileMap();\n  }\n\n  loadImages() {\n    this.load.image(\"button1\", button1);\n    this.load.image(\"button2\", button2);\n    this.load.image(\"background\", background);\n  }\n\n  loadSpriteSheets() {\n    this.load.spritesheet(\"items\", itemSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.spritesheet(\"characters\", charSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.spritesheet(\"monsters\", monsterSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n  }\n\n  loadAudio() {\n    // Could provide a wav and mp3 and phaser will choose best one for broswser\n    this.load.audio(\"goldSound\", [goalSound]);\n    this.load.audio(\"enemyDeath\", [enemyDeath]);\n    this.load.audio(\"playerAttack\", [playerAttack]);\n    this.load.audio(\"playerDamage\", [playerDamage]);\n    this.load.audio(\"playerDeath\", [playerDeath]);\n  }\n\n  create() {\n    this.scene.start(\"Game\");\n  }\n\n  loadTileMap() {\n    this.load.tilemapTiledJSON(\"map\", tileMap);\n  }\n\n}\n\nexport default BootScene;","map":{"version":3,"sources":["/home/odin/Dungeon/Github/phaser-3-exploration/client/src/game-core/scenes/BootScene.js"],"names":["Phaser","button1","button2","background","goalSound","enemyDeath","playerAttack","playerDamage","playerDeath","itemSpriteSheet","charSpriteSheet","monsterSpriteSheet","tileMap","BootScene","Scene","constructor","preload","loadImages","loadAudio","loadSpriteSheets","loadTileMap","load","image","spritesheet","frameWidth","frameHeight","audio","create","scene","start","tilemapTiledJSON"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AACA,MAAMC,SAAN,SAAwBb,MAAM,CAACc,KAA/B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ,UAAM,MAAN;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,SAAKC,UAAL;AACA,SAAKC,SAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,WAAL;AACD;;AAEDH,EAAAA,UAAU,GAAG;AACX,SAAKI,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2BrB,OAA3B;AACA,SAAKoB,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2BpB,OAA3B;AACA,SAAKmB,IAAL,CAAUC,KAAV,CAAgB,YAAhB,EAA8BnB,UAA9B;AACD;;AAEDgB,EAAAA,gBAAgB,GAAG;AACjB,SAAKE,IAAL,CAAUE,WAAV,CAAsB,OAAtB,EAA+Bd,eAA/B,EAAgD;AAC9Ce,MAAAA,UAAU,EAAE,EADkC;AAE9CC,MAAAA,WAAW,EAAE;AAFiC,KAAhD;AAIA,SAAKJ,IAAL,CAAUE,WAAV,CAAsB,YAAtB,EAAoCb,eAApC,EAAqD;AACnDc,MAAAA,UAAU,EAAE,EADuC;AAEnDC,MAAAA,WAAW,EAAE;AAFsC,KAArD;AAIA,SAAKJ,IAAL,CAAUE,WAAV,CAAsB,UAAtB,EAAkCZ,kBAAlC,EAAsD;AACpDa,MAAAA,UAAU,EAAE,EADwC;AAEpDC,MAAAA,WAAW,EAAE;AAFuC,KAAtD;AAID;;AAEDP,EAAAA,SAAS,GAAG;AACV;AACA,SAAKG,IAAL,CAAUK,KAAV,CAAgB,WAAhB,EAA6B,CAACtB,SAAD,CAA7B;AACA,SAAKiB,IAAL,CAAUK,KAAV,CAAgB,YAAhB,EAA8B,CAACrB,UAAD,CAA9B;AACA,SAAKgB,IAAL,CAAUK,KAAV,CAAgB,cAAhB,EAAgC,CAACpB,YAAD,CAAhC;AACA,SAAKe,IAAL,CAAUK,KAAV,CAAgB,cAAhB,EAAgC,CAACnB,YAAD,CAAhC;AACA,SAAKc,IAAL,CAAUK,KAAV,CAAgB,aAAhB,EAA+B,CAAClB,WAAD,CAA/B;AACD;;AACDmB,EAAAA,MAAM,GAAG;AACP,SAAKC,KAAL,CAAWC,KAAX,CAAiB,MAAjB;AACD;;AAEDT,EAAAA,WAAW,GAAG;AACZ,SAAKC,IAAL,CAAUS,gBAAV,CAA2B,KAA3B,EAAkClB,OAAlC;AACD;;AA/CkC;;AAkDrC,eAAeC,SAAf","sourcesContent":["import Phaser from \"phaser\";\nimport button1 from \"shared/images/ui/blue_button01.png\";\nimport button2 from \"shared/images/ui/blue_button02.png\";\nimport background from \"shared/level/background-extruded.png\";\nimport goalSound from \"shared/audio/Pickup.wav\";\nimport enemyDeath from \"shared/audio/EnemyDeath.wav\";\nimport playerAttack from \"shared/audio/PlayerAttack.wav\";\nimport playerDamage from \"shared/audio/PlayerDamage.wav\";\nimport playerDeath from \"shared/audio/PlayerDeath.wav\";\nimport itemSpriteSheet from \"shared/images/items.png\";\nimport charSpriteSheet from \"shared/images/characters.png\";\nimport monsterSpriteSheet from \"shared/images/monsters.png\";\nimport tileMap from \"shared/level/large_level.json\";\nclass BootScene extends Phaser.Scene {\n  constructor() {\n    super(\"Boot\");\n  }\n\n  preload() {\n    this.loadImages();\n    this.loadAudio();\n    this.loadSpriteSheets();\n    this.loadTileMap();\n  }\n\n  loadImages() {\n    this.load.image(\"button1\", button1);\n    this.load.image(\"button2\", button2);\n    this.load.image(\"background\", background);\n  }\n\n  loadSpriteSheets() {\n    this.load.spritesheet(\"items\", itemSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n    this.load.spritesheet(\"characters\", charSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n    this.load.spritesheet(\"monsters\", monsterSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n  }\n\n  loadAudio() {\n    // Could provide a wav and mp3 and phaser will choose best one for broswser\n    this.load.audio(\"goldSound\", [goalSound]);\n    this.load.audio(\"enemyDeath\", [enemyDeath]);\n    this.load.audio(\"playerAttack\", [playerAttack]);\n    this.load.audio(\"playerDamage\", [playerDamage]);\n    this.load.audio(\"playerDeath\", [playerDeath]);\n  }\n  create() {\n    this.scene.start(\"Game\");\n  }\n\n  loadTileMap() {\n    this.load.tilemapTiledJSON(\"map\", tileMap);\n  }\n}\n\nexport default BootScene;\n"]},"metadata":{},"sourceType":"module"}