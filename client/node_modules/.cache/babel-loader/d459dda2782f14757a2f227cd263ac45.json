{"ast":null,"code":"import Phaser from \"phaser\";\nimport button1 from \"shared/images/ui/blue_button01.png\";\nimport button2 from \"shared/images/ui/blue_button02.png\";\nimport background from \"shared/level/background-extruded.png\";\nimport goalSound from \"shared/audio/Pickup.wav\";\nimport enemyDeath from \"shared/audio/EnemyDeath.wav\";\nimport playerAttack from \"shared/audio/PlayerAttack.wav\";\nimport playerDamage from \"shared/audio/PlayerDamage.wav\";\nimport playerDeath from \"shared/audio/PlayerDeath.wav\";\nimport itemSpriteSheet from \"shared/images/items.png\";\nimport charSpriteSheet from \"shared/images/characters.png\";\nimport monsterSpriteSheet from \"shared/images/monsters.png\";\nimport tileMap from \"shared/level/large_level.json\";\nimport SocketService from \"shared/services/socket/socket-service\";\n\nclass BootScene extends Phaser.Scene {\n  constructor() {\n    super(\"Boot\");\n    this.socket = SocketService === null || SocketService === void 0 ? void 0 : SocketService.socket;\n  }\n\n  preload() {\n    this.loadImages();\n    this.loadAudio();\n    this.loadSpriteSheets();\n    this.loadTileMap(); // List for socket events\n\n    this.socketListener();\n  }\n\n  socketListener() {\n    this.socket.on(\"newPlayer\", s => {\n      console.log(\"New Player Event\", s);\n    });\n  }\n\n  loadImages() {\n    this.load.image(\"button1\", button1);\n    this.load.image(\"button2\", button2);\n    this.load.image(\"background\", background);\n  }\n\n  loadSpriteSheets() {\n    this.load.spritesheet(\"items\", itemSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.spritesheet(\"characters\", charSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.spritesheet(\"monsters\", monsterSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n  }\n\n  loadAudio() {\n    // Could provide a wav and mp3 and phaser will choose best one for broswser\n    this.load.audio(\"goalSound\", [goalSound]);\n    this.load.audio(\"enemyDeath\", [enemyDeath]);\n    this.load.audio(\"playerAttack\", [playerAttack]);\n    this.load.audio(\"playerDamage\", [playerDamage]);\n    this.load.audio(\"playerDeath\", [playerDeath]);\n  }\n\n  create() {\n    this.scene.start(\"Title\");\n    this.socket.emit(\"newPlayer\");\n  }\n\n  loadTileMap() {\n    this.load.tilemapTiledJSON(\"map\", tileMap);\n  }\n\n}\n\nexport default BootScene;","map":{"version":3,"sources":["/home/odin/Dungeon/Github/phaser-3-exploration/client/src/game-core/scenes/BootScene.js"],"names":["Phaser","button1","button2","background","goalSound","enemyDeath","playerAttack","playerDamage","playerDeath","itemSpriteSheet","charSpriteSheet","monsterSpriteSheet","tileMap","SocketService","BootScene","Scene","constructor","socket","preload","loadImages","loadAudio","loadSpriteSheets","loadTileMap","socketListener","on","s","console","log","load","image","spritesheet","frameWidth","frameHeight","audio","create","scene","start","emit","tilemapTiledJSON"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AACA,MAAMC,SAAN,SAAwBd,MAAM,CAACe,KAA/B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ,UAAM,MAAN;AACA,SAAKC,MAAL,GAAcJ,aAAd,aAAcA,aAAd,uBAAcA,aAAa,CAAEI,MAA7B;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,SAAKC,UAAL;AACA,SAAKC,SAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,WAAL,GAJQ,CAMR;;AACA,SAAKC,cAAL;AACD;;AAEDA,EAAAA,cAAc,GAAG;AACf,SAAKN,MAAL,CAAYO,EAAZ,CAAe,WAAf,EAA6BC,CAAD,IAAO;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC;AACD,KAFD;AAGD;;AAEDN,EAAAA,UAAU,GAAG;AACX,SAAKS,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2B5B,OAA3B;AACA,SAAK2B,IAAL,CAAUC,KAAV,CAAgB,SAAhB,EAA2B3B,OAA3B;AACA,SAAK0B,IAAL,CAAUC,KAAV,CAAgB,YAAhB,EAA8B1B,UAA9B;AACD;;AAEDkB,EAAAA,gBAAgB,GAAG;AACjB,SAAKO,IAAL,CAAUE,WAAV,CAAsB,OAAtB,EAA+BrB,eAA/B,EAAgD;AAC9CsB,MAAAA,UAAU,EAAE,EADkC;AAE9CC,MAAAA,WAAW,EAAE;AAFiC,KAAhD;AAIA,SAAKJ,IAAL,CAAUE,WAAV,CAAsB,YAAtB,EAAoCpB,eAApC,EAAqD;AACnDqB,MAAAA,UAAU,EAAE,EADuC;AAEnDC,MAAAA,WAAW,EAAE;AAFsC,KAArD;AAIA,SAAKJ,IAAL,CAAUE,WAAV,CAAsB,UAAtB,EAAkCnB,kBAAlC,EAAsD;AACpDoB,MAAAA,UAAU,EAAE,EADwC;AAEpDC,MAAAA,WAAW,EAAE;AAFuC,KAAtD;AAID;;AAEDZ,EAAAA,SAAS,GAAG;AACV;AACA,SAAKQ,IAAL,CAAUK,KAAV,CAAgB,WAAhB,EAA6B,CAAC7B,SAAD,CAA7B;AACA,SAAKwB,IAAL,CAAUK,KAAV,CAAgB,YAAhB,EAA8B,CAAC5B,UAAD,CAA9B;AACA,SAAKuB,IAAL,CAAUK,KAAV,CAAgB,cAAhB,EAAgC,CAAC3B,YAAD,CAAhC;AACA,SAAKsB,IAAL,CAAUK,KAAV,CAAgB,cAAhB,EAAgC,CAAC1B,YAAD,CAAhC;AACA,SAAKqB,IAAL,CAAUK,KAAV,CAAgB,aAAhB,EAA+B,CAACzB,WAAD,CAA/B;AACD;;AACD0B,EAAAA,MAAM,GAAG;AACP,SAAKC,KAAL,CAAWC,KAAX,CAAiB,OAAjB;AACA,SAAKnB,MAAL,CAAYoB,IAAZ,CAAiB,WAAjB;AACD;;AAEDf,EAAAA,WAAW,GAAG;AACZ,SAAKM,IAAL,CAAUU,gBAAV,CAA2B,KAA3B,EAAkC1B,OAAlC;AACD;;AA1DkC;;AA6DrC,eAAeE,SAAf","sourcesContent":["import Phaser from \"phaser\";\nimport button1 from \"shared/images/ui/blue_button01.png\";\nimport button2 from \"shared/images/ui/blue_button02.png\";\nimport background from \"shared/level/background-extruded.png\";\nimport goalSound from \"shared/audio/Pickup.wav\";\nimport enemyDeath from \"shared/audio/EnemyDeath.wav\";\nimport playerAttack from \"shared/audio/PlayerAttack.wav\";\nimport playerDamage from \"shared/audio/PlayerDamage.wav\";\nimport playerDeath from \"shared/audio/PlayerDeath.wav\";\nimport itemSpriteSheet from \"shared/images/items.png\";\nimport charSpriteSheet from \"shared/images/characters.png\";\nimport monsterSpriteSheet from \"shared/images/monsters.png\";\nimport tileMap from \"shared/level/large_level.json\";\nimport SocketService from \"shared/services/socket/socket-service\";\nclass BootScene extends Phaser.Scene {\n  constructor() {\n    super(\"Boot\");\n    this.socket = SocketService?.socket;\n  }\n\n  preload() {\n    this.loadImages();\n    this.loadAudio();\n    this.loadSpriteSheets();\n    this.loadTileMap();\n\n    // List for socket events\n    this.socketListener();\n  }\n\n  socketListener() {\n    this.socket.on(\"newPlayer\", (s) => {\n      console.log(\"New Player Event\", s);\n    });\n  }\n\n  loadImages() {\n    this.load.image(\"button1\", button1);\n    this.load.image(\"button2\", button2);\n    this.load.image(\"background\", background);\n  }\n\n  loadSpriteSheets() {\n    this.load.spritesheet(\"items\", itemSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n    this.load.spritesheet(\"characters\", charSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n    this.load.spritesheet(\"monsters\", monsterSpriteSheet, {\n      frameWidth: 32,\n      frameHeight: 32,\n    });\n  }\n\n  loadAudio() {\n    // Could provide a wav and mp3 and phaser will choose best one for broswser\n    this.load.audio(\"goalSound\", [goalSound]);\n    this.load.audio(\"enemyDeath\", [enemyDeath]);\n    this.load.audio(\"playerAttack\", [playerAttack]);\n    this.load.audio(\"playerDamage\", [playerDamage]);\n    this.load.audio(\"playerDeath\", [playerDeath]);\n  }\n  create() {\n    this.scene.start(\"Title\");\n    this.socket.emit(\"newPlayer\");\n  }\n\n  loadTileMap() {\n    this.load.tilemapTiledJSON(\"map\", tileMap);\n  }\n}\n\nexport default BootScene;\n"]},"metadata":{},"sourceType":"module"}